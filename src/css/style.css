* {
    box-sizing: border-box;
    /* звездочка означет, что применеяем ко всему документу. Делать всегда для всех страниц. Отменяет складывание паддингов, марджинов и тд, чтобы наши элементы были тех размеров, которые мы установили */
}

@font-face {
    font-family: 'Philosopher';
    src: local('Philosopher');
    src: url(../fonts/Philosopher-Regular.ttf)
}

html {
    font-family: 'Roboto!';
}

@font-face {
    font-family: 'Roboto!';
    src: local('Roboto');
    src: url('../fonts/Roboto-Regular.eot');
    src: url('../fonts/Roboto-Regular.eot?#iefix') format('embedded-opentype'),
    url('../fonts/Roboto-Regular.woff') format('woff'),
    url('../fonts/Roboto-Regular.ttf') format('truetype');
    font-weight: 400;
    font-style: normal;
    }


@font-face {
    font-family: 'Roboto Bold';
    src: url('Roboto-Bold.eot');
    src: url('Roboto-Bold.eot?#iefix') format('embedded-opentype'),
    url('Roboto-Bold.woff') format('woff'),
    url('Roboto-Bold.ttf') format('truetype');
    font-weight: 700;
    font-style: normal;
    }

body {
    /* закрасили цветом весь боди */
    background-color: #FFE2B0;
}

header {
    text-align: center;
    /* выравнивание текста, действует только на то что внутри тега, а не на сам тег */
    margin-bottom: 20px;
    /* этим марджином двигаем соседа тег <nav> (меню) */
}

ul {
    list-style-type: none;
    /* убрать точки у списка */
    text-align: center;
    /* выравнивание текста, действует только на то что внутри тега, а не на сам тег */
    padding: 0px;
    /* убираем стандартные паддинги */
}

li {
    display: inline;
    /* делаем теги li (меню) строчными элементами */
    margin-right: 100px;
}

a {
    color: black;
    text-decoration: none;
    /* убрать подчеркивание у ссылок */
    font-size: 18px;
    /* margin-top: 50px;  это какой-то косяк автора, не использовать здесь*/
    font-weight: 700;
    /* задаем начертание */
}

li:last-child {
    margin-right: 0px;
    /* последний элемент списка (li) будет с марджин райт 0 пикс */
}


nav {
    margin-bottom: 20px;
    /* эти марджином двигаем уже следующий элемент */
}

.secition-about {
    height: 640px;
    background: url(../img/01-picture_background.jpg) center/cover no-repeat;
    /* используем 2 свойства (position и size), между ними ставим знак слэш /  */
    position: relative;
    /* пиешем сюда, чтобы след. элемент позиционировался от этого элемента, а не от боди. Вроде нужно для top и left */
    margin-bottom: 20px;
    /* двигает блок с картинками */
}

.secition-about__block{
    width: 420px;
    height: 190px;
    background: linear-gradient(180deg, rgba(244, 213, 178, 0.8) 0%, rgba(234, 156, 65, 0.8)100%);
    /* 180deg - угол падения градиента. rgba это ред грин блю + альфа канал, который отвечает за прозрачность. 0%, 100% это переход, то пространство сколько займет цвет и точка в которой начнется смещение к другому цвету */
    position: absolute;
    top: 54%;
    left: 50%;
    /* top и left используем для позиционирования блока, если задан position: absolute; или position: fixed; или position: fixed; */
    /* проценты высчитываем по схеме: делим заданный отступ в пикселях на ширину макета, умножаем на 100. Задаем например верхний и левый отступ, чтобы зафиксировать блок, который болтается при изменении размера экрана. В этом случае блок будет четко стоять по тем отступам, что мы задали */
    padding-top: 15px;
    /* делаем внутренний отступ, чтобы опустить вниз .secition-about__border */
}

.secition-about__border{
    width: 390px;
    height: 160px;
    border: 1px solid black;
    margin: 0 auto;
    /* margin: 0 auto работает только когда у элемента есть ширина. Первый ноль двигает по горизонтали (или обнуляет отступы). С вертикалями не будет работать */
    padding: 17px 0 0 28px;
    /* эта часть "толкает" вниз и правее идущий следом заголовок и текст */
    text-align: left;
    /* выравниваем текст в след. элементе слева */
}

.secition-about_title{
    font-size: 36px;
    margin: 0;
    /* margin: 0 обнуляет отступы */
    margin-bottom: 9px;
    /* делает отступ между заголовком и текстом */
    font-family: 'Philosopher';
}

.secition-about_text{
    font-size: 12px;
    margin: 0;
    /* margin: 0 обнуляет отступы */
}

.section-description {
    margin-bottom: 20px;
}

.section-description__icon-box {
    text-align: center;
    margin-bottom: 20px;
}

.section-description__icon-box img {
    margin-right: 76px;
    /* применяем свойства к дочерним элементам класса "section-description__icon-box" img */
}

.section-description__icon-box img:last-child {
    margin-right: 0px;
}

.section-description__title {
    font-size: 96px;
    margin: 0px;
    /* обнуляет стандартные отступы */
    text-align: center;
    /* можно применять в данном случае не к родителю, т.к. это блочный элемент (заголовок - текст) */
    font-family: 'Philosopher';
}

.section-description__span {
    color: #f15b40;
}

.section-description__text {
    font-size: 18px;
    margin: 0 auto;
    text-align: center;
    width: 1000px;    
}

.section_map {
    margin-bottom: 20px;
}

.section_map__title {
    margin-bottom: 20px;
    text-align: center;
    font-size: 36px;
    font-family: 'Philosopher';
}

iframe {
    display: block;
    margin: 0 auto;
    /* делаем карту со строчной в блочную, убираем отступы, она встанет по центру */
}

hr {
    border: none;
    border-top: 1px solid #999999;
    width: 1024px;
    margin: 0 auto; 
    /* обнуляем отступы и фактически блок центруется */
    margin-bottom: 20px;
}

footer {
    height: 80px;
    /* задаем высоту футеру, чтобы сделать отступ снизу, т.к. если сделаем марджин боттом в последнем элементе он не сработает, а в боди нельзя трогать так не по фэншую */
}

h1 {
    font-family: 'Roboto!';
}